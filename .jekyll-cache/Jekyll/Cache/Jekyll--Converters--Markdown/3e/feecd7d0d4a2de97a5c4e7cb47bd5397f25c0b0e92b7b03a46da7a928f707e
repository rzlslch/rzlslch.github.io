I"<p>Assalamuâ€™alaikum Warrahmatullah Wabarakatuh</p>

<p>Bismillahirrahmanirrahim</p>

<p>Pada Odoo 12, untuk dapat menambahkan <code class="language-plaintext highlighter-rouge">custom config</code> pada <code class="language-plaintext highlighter-rouge">setting</code>, adalah sebagai berikut.</p>

<p>Pertama adalah dengan membuat <code class="language-plaintext highlighter-rouge">fields</code> pada <code class="language-plaintext highlighter-rouge">res.config.settings</code></p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="k">class</span> <span class="nc">ResConfigCustom</span><span class="p">(</span><span class="n">models</span><span class="p">.</span><span class="n">TransientModel</span><span class="p">):</span>
    <span class="n">_inherit</span> <span class="o">=</span> <span class="s">'res.config.settings'</span>

    <span class="n">custom_field</span> <span class="o">=</span> <span class="n">fields</span><span class="p">.</span><span class="n">Char</span><span class="p">(</span><span class="s">'Custom Config'</span><span class="p">)</span></code></pre></figure>

<p>Karena <code class="language-plaintext highlighter-rouge">model</code> dari <code class="language-plaintext highlighter-rouge">res.config.settings</code> merupakan <code class="language-plaintext highlighter-rouge">TransientModel</code>, data yang dimasukkan tidak dapat disimpan dalam <code class="language-plaintext highlighter-rouge">model</code> tersebut. Sehingga data tersebut harus disimpan pada <code class="language-plaintext highlighter-rouge">model</code> lainnya. Contohnya, data akan disimpan pada <code class="language-plaintext highlighter-rouge">res.company</code>. Maka harus dibuatkan field untuk menyimpan data tersebut.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="k">class</span> <span class="nc">ResCompanyCustom</span><span class="p">(</span><span class="n">models</span><span class="p">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="n">_inherit</span> <span class="o">=</span> <span class="s">'res.company'</span>

    <span class="n">custom_field</span> <span class="o">=</span> <span class="n">fields</span><span class="p">.</span><span class="n">Char</span><span class="p">(</span><span class="s">'Custom Config'</span><span class="p">)</span></code></pre></figure>

<p>Untuk menyimpan data pada <code class="language-plaintext highlighter-rouge">model</code> yang sudah disiapkan, buat akses untuk memanggil fungsi <code class="language-plaintext highlighter-rouge">save</code> pada <code class="language-plaintext highlighter-rouge">res.config.settings</code>. Tidak seperti <code class="language-plaintext highlighter-rouge">model</code> pada umumnya yang menggunakan <code class="language-plaintext highlighter-rouge">write</code>, <code class="language-plaintext highlighter-rouge">res.config.settings</code> menggunakan <code class="language-plaintext highlighter-rouge">create</code> waktu memanggil fungsi <code class="language-plaintext highlighter-rouge">save</code>. Maka panggil fungsi <code class="language-plaintext highlighter-rouge">create</code> pada model <code class="language-plaintext highlighter-rouge">res.config.settings</code>. Dalam fungsi tersebut panggil fungsi untuk menyimpan data yang ada pada <code class="language-plaintext highlighter-rouge">model</code> yang dituju. Karena data yang akan disimpan berada pada <code class="language-plaintext highlighter-rouge">field custom_field</code>, maka ambil <code class="language-plaintext highlighter-rouge">values</code> yang dijalankan ketika melakukan proses <code class="language-plaintext highlighter-rouge">create</code> dan simpan pada <code class="language-plaintext highlighter-rouge">model</code> yang dituju, yaitu <code class="language-plaintext highlighter-rouge">res.company</code>.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python">    <span class="o">@</span><span class="n">api</span><span class="p">.</span><span class="n">model</span>
    <span class="k">def</span> <span class="nf">create</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">values</span><span class="p">):</span>
        <span class="n">res</span> <span class="o">=</span> <span class="nb">super</span><span class="p">(</span><span class="n">ResConfigCustom</span><span class="p">,</span> <span class="bp">self</span><span class="p">).</span><span class="n">create</span><span class="p">(</span><span class="n">values</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">env</span><span class="p">.</span><span class="n">user</span><span class="p">.</span><span class="n">company_id</span><span class="p">.</span><span class="n">write</span><span class="p">({</span><span class="s">'custom_field'</span><span class="p">:</span> <span class="n">values</span><span class="p">[</span><span class="s">'custom_field'</span><span class="p">]})</span>
        <span class="k">return</span> <span class="n">res</span></code></pre></figure>

<p>Sekarang data telah tersimpan pada <code class="language-plaintext highlighter-rouge">model</code> yang dituju.</p>

<p>Lalu bagaimana cara agar data tersebut dapat ditampilkan pada <code class="language-plaintext highlighter-rouge">res.config.settings</code>? Caranya adalah dengan memanggil fungsi <code class="language-plaintext highlighter-rouge">default_get</code> yang dijalankan setiap kali sistem mau menampilkan <code class="language-plaintext highlighter-rouge">config settings</code>. Fungsi ini akan memasukkan data pada <code class="language-plaintext highlighter-rouge">parameter fields</code> pada <code class="language-plaintext highlighter-rouge">res.config.settings</code>. Langsung masukkan saja data yang mau ditampilkan pada <code class="language-plaintext highlighter-rouge">fields</code> yang dituju.</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python">    <span class="o">@</span><span class="n">api</span><span class="p">.</span><span class="n">model</span>
    <span class="k">def</span> <span class="nf">default_get</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">fields</span><span class="p">):</span>
        <span class="n">res</span> <span class="o">=</span> <span class="nb">super</span><span class="p">(</span><span class="n">ResConfigCustom</span><span class="p">,</span> <span class="bp">self</span><span class="p">).</span><span class="n">default_get</span><span class="p">(</span><span class="n">fields</span><span class="p">)</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'custom_field'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">env</span><span class="p">.</span><span class="n">user</span><span class="p">.</span><span class="n">company_id</span><span class="p">.</span><span class="n">custom_field</span>
        <span class="k">return</span> <span class="n">res</span></code></pre></figure>

<p>Maka secara otomatis, <code class="language-plaintext highlighter-rouge">res.config.settings</code> akan menampilkan data yang sebelumnya disimpan pada <code class="language-plaintext highlighter-rouge">res.company</code></p>
:ET